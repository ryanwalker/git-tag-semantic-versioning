#!/usr/bin/env bash

set -e

message() {
    echo "#############################################"
    echo "# $1"
    echo "#############################################"
}

CURRENT_BRANCH=`git branch | grep \* | sed -E "s/\* //"`

if [ "$CURRENT_BRANCH" != "develop" ]; then
  message "Must be on develop branch"
  exit 1;
fi
git pull

CURRENT_RELEASE_BRANCH=`git branch --list "release-branch-*" | sort -r | sed -n '1 p'`
CURRENT_RELEASE_BRANCH_NUMBER=`echo "$CURRENT_RELEASE_BRANCH" | sed -E "s/release-branch-([0-9]+)/\1/"`
NEW_RELEASE_BRANCH_NUMBER=$((CURRENT_RELEASE_BRANCH_NUMBER+1))
NEW_RELEASE_BRANCH="release-branch-$NEW_RELEASE_BRANCH_NUMBER"

git checkout -b $NEW_RELEASE_BRANCH
message "Release branch created: $NEW_RELEASE_BRANCH"

travis env set QA_BRANCH $NEW_RELEASE_BRANCH
message "Set Travis \$QA_BRANCH to $NEW_RELEASE_BRANCH"


git checkout develop
CURRENT_DEVELOP_VERSION=`./bin/current-version`
NEW_DEVELOP_VERSION=`./bin/next-version ALPHA MINOR`
# Adding new commit to tag
echo "$NEW_DEVELOP_VERSION" >> .tags
git add .tags
git commit -m "$NEW_DEVELOP_VERSION"
git tag -am $NEW_DEVELOP_VERSION "$NEW_DEVELOP_VERSION"
message "Bumped develop version from $CURRENT_DEVELOP_VERSION to $NEW_DEVELOP_VERSION"

git push -u origin $NEW_RELEASE_BRANCH
message "Pushed $NEW_RELEASE_BRANCH to Github"

git push --tags origin develop
message "Pushed develop to Github"
